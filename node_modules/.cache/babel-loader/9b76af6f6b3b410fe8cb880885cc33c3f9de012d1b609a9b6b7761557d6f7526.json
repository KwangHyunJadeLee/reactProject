{"ast":null,"code":"var _jsxFileName = \"/Users/gwang/react-project/react-complete-guide/react_project_account_book/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  // There are two ways to update userInput ..\n  // One is to use each other's useState.\n  // The other is using objects.\n  // There is no additional benefit to using either one.\n  // Depends on preference\n  // see the syntax example below\n\n  //   const [enteredTitle, setEnteredTitle] = useState(\"\");\n  //   const [enteredAmount, setEnteredAmount] = useState(\"\");\n  //   const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\"\n  });\n  const titleChangeHandler = event => {\n    // setEnteredTitle(event.target.value);\n\n    // setUserInput({                          // In this case, the values of other objects must also be specified.\n    //   ...userInput,                         // ES6 Syntax.. all Object copy.\n    //   enteredTitle: event.target.value,     // Change only the values included in the event\n    // });\n\n    // In the case above, it can be wrong if the state reference wrong version of state\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        enteredTitle: event.target.value\n      }; // The prevState helps state keep always latest.\n    });\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"new-expense__controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: titleChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        onChange: amountChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        min: \"2019-01-01\",\n        max: \"2023-12-31\",\n        onChange: dateChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"fOKiQJ0uFtiE+wpCN1+3hpMhKHE=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ExpenseForm","_s","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandler","event","prevState","target","value","amountChangeHandler","setEnteredAmount","dateChangeHandler","setEnteredDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["/Users/gwang/react-project/react-complete-guide/react_project_account_book/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = () => {\n  // There are two ways to update userInput ..\n  // One is to use each other's useState.\n  // The other is using objects.\n  // There is no additional benefit to using either one.\n  // Depends on preference\n  // see the syntax example below\n\n  //   const [enteredTitle, setEnteredTitle] = useState(\"\");\n  //   const [enteredAmount, setEnteredAmount] = useState(\"\");\n  //   const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\",\n  });\n\n  const titleChangeHandler = (event) => {\n    // setEnteredTitle(event.target.value);\n\n    // setUserInput({                          // In this case, the values of other objects must also be specified.\n    //   ...userInput,                         // ES6 Syntax.. all Object copy.\n    //   enteredTitle: event.target.value,     // Change only the values included in the event\n    // });\n\n    // In the case above, it can be wrong if the state reference wrong version of state\n    setUserInput((prevState) => {\n      return { ...prevState, enteredTitle: event.target.value }; // The prevState helps state keep always latest.\n    });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  return (\n    <form className=\"new-expense__controls\">\n      <div className=\"new-expense__control\">\n        <label>Title</label>\n        <input type=\"text\" onChange={titleChangeHandler} />\n      </div>\n      <div className=\"new-expense__control\">\n        <label>Amount</label>\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          onChange={amountChangeHandler}\n        />\n      </div>\n      <div className=\"new-expense__control\">\n        <label>Date</label>\n        <input\n          type=\"date\"\n          min=\"2019-01-01\"\n          max=\"2023-12-31\"\n          onChange={dateChangeHandler}\n        />\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\nexport default ExpenseForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}